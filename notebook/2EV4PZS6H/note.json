{
  "paragraphs": [
    {
      "text": "\n  import scala.io.Source\n  \n  val home \u003d \"/Users/iramaraju/Desktop/Spark/exercises\"\n  val datadir \u003d s\"$home/data/\"\n  val outdir \u003d s\"$home/output\"\n\n  val inputPath \u003d s\"$outdir/crawl-output\"\n\n  val lineRE \u003d \"\"\"^\\s*\\(([^,]+),(.*)\\)\\s*$\"\"\".r\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:46:40.573",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import scala.io.Source\nhome: String \u003d /Users/iramaraju/Desktop/Spark/exercises\ndatadir: String \u003d /Users/iramaraju/Desktop/Spark/exercises/data/\noutdir: String \u003d /Users/iramaraju/Desktop/Spark/exercises/output\ninputPath: String \u003d /Users/iramaraju/Desktop/Spark/exercises/output/crawl-output\nlineRE: scala.util.matching.Regex \u003d ^\\s*\\(([^,]+),(.*)\\)\\s*$\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575342567211_1979263101",
      "id": "20191202-210927_1186077305",
      "dateCreated": "2019-12-02 21:09:27.211",
      "dateStarted": "2019-12-03 08:46:40.656",
      "dateFinished": "2019-12-03 08:46:53.078",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  /* ... new cell ... */\n\n  val input \u003d sc.textFile(inputPath) map {\n    case lineRE(name, text) \u003d\u003e\n      (name.trim, text.toLowerCase)\n    case badLine \u003d\u003e\n      Console.err.println(s\"Unexpected line: $badLine\")\n      (\"\", \"\")\n  }",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:47:11.891",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "input: org.apache.spark.rdd.RDD[(String, String)] \u003d MapPartitionsRDD[7] at map at \u003cconsole\u003e:31\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575342621045_-2093456856",
      "id": "20191202-211021_1808229823",
      "dateCreated": "2019-12-02 21:10:21.045",
      "dateStarted": "2019-12-03 08:47:11.913",
      "dateFinished": "2019-12-03 08:47:12.361",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  /* ... new cell ... */\n\n  val contentToOne \u003d  input.flatMap { case (path, text) \u003d\u003e\n    text.trim.split(\"\\\\W+\").map(word \u003d\u003e ((word,path),1))\n  }",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:47:13.386",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "contentToOne: org.apache.spark.rdd.RDD[((String, String), Int)] \u003d MapPartitionsRDD[8] at flatMap at \u003cconsole\u003e:28\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575342614845_-1092912599",
      "id": "20191202-211014_1353160831",
      "dateCreated": "2019-12-02 21:10:14.845",
      "dateStarted": "2019-12-03 08:47:13.407",
      "dateFinished": "2019-12-03 08:47:13.735",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n  /* ... new cell ... */\n\n  val countCombinations \u003d contentToOne.reduceByKey( _ + _ )",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:47:14.838",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "countCombinations: org.apache.spark.rdd.RDD[((String, String), Int)] \u003d ShuffledRDD[9] at reduceByKey at \u003cconsole\u003e:28\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575342608911_1568118996",
      "id": "20191202-211008_1755478770",
      "dateCreated": "2019-12-02 21:10:08.911",
      "dateStarted": "2019-12-03 08:47:14.857",
      "dateFinished": "2019-12-03 08:47:15.199",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  /* ... new cell ... */\n\n  val keyWords  \u003d countCombinations.map {\n    case ((word, path), n) \u003d\u003e (word, (path, n))\n  }",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:47:16.323",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "keyWords: org.apache.spark.rdd.RDD[(String, (String, Int))] \u003d MapPartitionsRDD[10] at map at \u003cconsole\u003e:28\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575342603346_-588303529",
      "id": "20191202-211003_2068278587",
      "dateCreated": "2019-12-02 21:10:03.346",
      "dateStarted": "2019-12-03 08:47:16.341",
      "dateFinished": "2019-12-03 08:47:16.581",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  /* ... new cell ... */\n\n  val groupedByWord \u003d keyWords.groupByKey",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:47:21.393",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "groupedByWord: org.apache.spark.rdd.RDD[(String, Iterable[(String, Int)])] \u003d ShuffledRDD[11] at groupByKey at \u003cconsole\u003e:28\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575342598738_262125000",
      "id": "20191202-210958_464932087",
      "dateCreated": "2019-12-02 21:09:58.738",
      "dateStarted": "2019-12-03 08:47:21.410",
      "dateFinished": "2019-12-03 08:47:21.695",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  /* ... new cell ... */\n\n  val cleanAndJoined \u003d groupedByWord.mapValues(iterable \u003d\u003e iterable.mkString(\", \"))",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:47:25.053",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "cleanAndJoined: org.apache.spark.rdd.RDD[(String, String)] \u003d MapPartitionsRDD[12] at mapValues at \u003cconsole\u003e:28\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575342594493_-2057296643",
      "id": "20191202-210954_1319587633",
      "dateCreated": "2019-12-02 21:09:54.493",
      "dateStarted": "2019-12-03 08:47:25.069",
      "dateFinished": "2019-12-03 08:47:25.336",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  /* ... new cell ... */\n\n  val outputPath \u003d s\"$home/output/inverted-index\"\n  val outputPathFile \u003d new java.io.File(outputPath)\n  cleanAndJoined.saveAsTextFile(outputPath)",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:50:54.246",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "outputPath: String \u003d /Users/iramaraju/Desktop/Spark/exercises/output/inverted-index\noutputPathFile: java.io.File \u003d /Users/iramaraju/Desktop/Spark/exercises/output/inverted-index\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://localhost:4040/jobs/job?id\u003d0"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1575342587954_380561378",
      "id": "20191202-210947_101018982",
      "dateCreated": "2019-12-02 21:09:47.954",
      "dateStarted": "2019-12-03 08:50:54.260",
      "dateFinished": "2019-12-03 08:50:57.396",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  /* ... new cell ... */\n\n  println()\n  // Look at some of the contents:\n  Source.fromFile(outputPath+\"/part-00000\").getLines.take(50).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2019-12-03 08:51:41.823",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\n(chronicles,(0019.2001-07-06.SA_and_HP.spam.txt,1), (0016.2001-07-06.SA_and_HP.spam.txt,1))\n(pitifully,(0013.2004-08-01.BG.spam.txt,1))\n(dolls,(0008.2001-06-25.SA_and_HP.spam.txt,1))\n(ll,(0017.2001-04-03.williams.ham.txt,1), (0029.2001-08-03.SA_and_HP.spam.txt,4), (0001.2001-04-02.williams.ham.txt,1), (0016.2001-07-06.SA_and_HP.spam.txt,5), (0011.2001-06-29.SA_and_HP.spam.txt,4), (0008.2001-06-25.SA_and_HP.spam.txt,1), (0014.2001-07-04.SA_and_HP.spam.txt,1), (0020.2001-07-28.SA_and_HP.spam.txt,3), (0009.2001-06-26.SA_and_HP.spam.txt,1), (0019.2001-07-06.SA_and_HP.spam.txt,5), (0004.2001-06-12.SA_and_HP.spam.txt,1), (0008.2001-06-12.SA_and_HP.spam.txt,1), (0013.2001-06-30.SA_and_HP.spam.txt,7), (0023.2003-12-20.GP.spam.txt,1))\n(xeni,(0009.2003-12-18.GP.spam.txt,1), (0016.2003-12-19.GP.spam.txt,1))\n(9100,(0005.2003-12-18.GP.spam.txt,1))\n(bone,(0006.2003-12-18.GP.spam.txt,1))\n(darlington,(0023.2004-08-02.BG.spam.txt,1))\n(312,(0027.2001-02-15.kitchen.ham.txt,1), (0002.1999-12-13.farmer.ham.txt,1), (0023.2004-08-02.BG.spam.txt,1))\n(afternoon,(0001.2001-04-02.williams.ham.txt,1), (0008.2004-08-01.BG.spam.txt,1), (0020.2001-02-13.kitchen.ham.txt,1), (0027.1999-12-16.kaminski.ham.txt,1), (0005.2000-06-06.lokay.ham.txt,1), (0012.2001-02-09.kitchen.ham.txt,1))\n(handled,(0013.2001-06-30.SA_and_HP.spam.txt,1), (0009.2000-06-07.lokay.ham.txt,1))\n(oblibgat,(0004.2004-08-01.BG.spam.txt,1))\n(aplicadas,(0034.2004-08-05.BG.spam.txt,1))\n(been,(0027.1999-12-17.farmer.ham.txt,1), (0033.2001-08-05.SA_and_HP.spam.txt,1), (0029.2001-08-03.SA_and_HP.spam.txt,2), (0018.2003-12-18.GP.spam.txt,1), (0011.1999-12-14.farmer.ham.txt,1), (0009.1999-12-13.kaminski.ham.txt,1), (0010.2001-02-09.kitchen.ham.txt,1), (0034.2004-08-03.BG.spam.txt,1), (0023.2004-08-02.BG.spam.txt,2), (0037.2004-08-05.BG.spam.txt,1), (0009.2001-02-09.kitchen.ham.txt,2), (0030.2003-12-21.GP.spam.txt,1), (0011.2001-06-29.SA_and_HP.spam.txt,3), (0005.1999-12-14.farmer.ham.txt,1), (0017.2000-01-17.beck.ham.txt,3), (0006.2001-02-08.kitchen.ham.txt,5), (0032.2000-01-18.beck.ham.txt,3), (0004.1999-12-14.farmer.ham.txt,1), (0005.2000-06-06.lokay.ham.txt,1), (0021.2000-01-17.beck.ham.txt,3), (0012.2001-02-09.kitchen.ham.txt,1), (0007.2000-01-17.beck.ham.txt,3), (0019.2000-01-17.beck.ham.txt,3), (0023.1999-12-15.kaminski.ham.txt,2), (0017.2004-08-02.BG.spam.txt,2), (0005.1999-12-12.kaminski.ham.txt,1), (0027.2000-01-17.beck.ham.txt,3), (0012.2000-06-08.lokay.ham.txt,2), (0015.2001-02-12.kitchen.ham.txt,2), (0018.2004-08-03.BG.spam.txt,1), (0016.2001-07-06.SA_and_HP.spam.txt,9), (0005.2003-12-18.GP.spam.txt,1), (0004.2001-04-02.williams.ham.txt,1), (0026.2001-07-13.SA_and_HP.spam.txt,1), (0023.2001-02-14.kitchen.ham.txt,1), (0012.2000-01-17.beck.ham.txt,3), (0011.2004-08-01.BG.spam.txt,1), (0035.2001-08-05.SA_and_HP.spam.txt,3), (0013.2001-06-30.SA_and_HP.spam.txt,3), (0036.2001-08-05.SA_and_HP.spam.txt,1), (0019.2001-07-06.SA_and_HP.spam.txt,9), (0022.2004-08-02.BG.spam.txt,2), (0026.2000-01-17.beck.ham.txt,3), (0007.2001-02-09.kitchen.ham.txt,1), (0022.1999-12-16.farmer.ham.txt,1), (0020.2001-07-28.SA_and_HP.spam.txt,3), (0015.2003-12-19.GP.spam.txt,1), (0029.2004-08-02.BG.spam.txt,1), (0018.2001-07-13.SA_and_HP.spam.txt,1), (0021.2001-02-13.kitchen.ham.txt,4), (0020.2001-02-13.kitchen.ham.txt,1), (0021.2004-08-02.BG.spam.txt,2))\n(cecil,(0020.2004-08-02.BG.spam.txt,1))\n(similes,(0013.2001-06-30.SA_and_HP.spam.txt,1))\n(nom,(0015.1999-12-15.farmer.ham.txt,2), (0011.1999-12-14.farmer.ham.txt,4), (0014.1999-12-15.farmer.ham.txt,2), (0030.1999-12-20.farmer.ham.txt,1))\n(reserve,(0011.2001-06-29.SA_and_HP.spam.txt,1), (0005.2003-12-18.GP.spam.txt,1))\n(breath,(0029.2001-08-03.SA_and_HP.spam.txt,1), (0013.2001-06-30.SA_and_HP.spam.txt,4), (0016.2001-07-06.SA_and_HP.spam.txt,1), (0019.2001-07-06.SA_and_HP.spam.txt,1))\n(clients,(0001.2000-01-17.beck.ham.txt,1))\n(stayed,(0013.2001-04-03.williams.ham.txt,1))\n(39934,(0006.2001-02-08.kitchen.ham.txt,1), (0020.2001-02-13.kitchen.ham.txt,1), (0007.2001-02-09.kitchen.ham.txt,1))\n(wingtip,(0022.2004-08-03.BG.spam.txt,1))\n(knows,(0011.2001-06-28.SA_and_HP.spam.txt,1), (0010.2001-06-28.SA_and_HP.spam.txt,1))\n(642,(0014.2001-02-12.kitchen.ham.txt,1))\n(preeminentmedlar,(0033.2004-08-03.BG.spam.txt,1))\n(recruiting,(0023.2001-02-14.kitchen.ham.txt,1), (0009.2001-02-09.kitchen.ham.txt,1), (0010.2001-02-09.kitchen.ham.txt,1), (0008.2001-06-25.SA_and_HP.spam.txt,1))\n(tvvqu,(0019.2003-12-20.GP.spam.txt,1))\n(file,(0007.2001-02-09.kitchen.ham.txt,1), (0023.2004-08-02.BG.spam.txt,1), (0011.2001-06-29.SA_and_HP.spam.txt,1), (0035.2001-08-05.SA_and_HP.spam.txt,1), (0017.2004-08-02.BG.spam.txt,1), (0006.2001-02-08.kitchen.ham.txt,1), (0004.1999-12-10.kaminski.ham.txt,1), (0022.2004-08-02.BG.spam.txt,1), (0028.2001-02-15.kitchen.ham.txt,1), (0020.2001-02-13.kitchen.ham.txt,1), (0021.2004-08-02.BG.spam.txt,1), (0015.2000-06-09.lokay.ham.txt,1))\n(pilot,(0001.2000-01-17.beck.ham.txt,6), (0030.2000-01-18.beck.ham.txt,6))\n(informative,(0011.2001-06-29.SA_and_HP.spam.txt,1))\n(headline,(0013.2001-06-30.SA_and_HP.spam.txt,2))\n(procurement,(0001.2000-06-06.lokay.ham.txt,1), (0008.2001-02-09.kitchen.ham.txt,1))\n(tips,(0020.2001-07-28.SA_and_HP.spam.txt,3), (0029.2001-08-03.SA_and_HP.spam.txt,5), (0013.2001-06-30.SA_and_HP.spam.txt,3), (0011.2001-06-29.SA_and_HP.spam.txt,1))\n(responsibilities,(0012.2000-01-17.beck.ham.txt,2), (0032.2000-01-18.beck.ham.txt,2), (0026.2000-01-17.beck.ham.txt,2), (0007.2000-01-17.beck.ham.txt,2), (0022.1999-12-15.kaminski.ham.txt,4), (0019.2000-01-17.beck.ham.txt,2), (0021.2000-01-17.beck.ham.txt,3), (0017.2000-01-17.beck.ham.txt,2), (0009.2000-06-07.lokay.ham.txt,1), (0027.2000-01-17.beck.ham.txt,2))\n(are,(0025.2001-02-14.kitchen.ham.txt,1), (0020.2001-07-28.SA_and_HP.spam.txt,16), (0019.2001-07-06.SA_and_HP.spam.txt,13), (0005.2003-12-18.GP.spam.txt,1), (0017.2004-08-02.BG.spam.txt,1), (0032.2000-01-18.beck.ham.txt,1), (0011.2004-08-01.BG.spam.txt,1), (0022.1999-12-15.kaminski.ham.txt,1), (0016.2001-07-05.SA_and_HP.spam.txt,1), (0009.2001-06-26.SA_and_HP.spam.txt,1), (0013.2001-06-30.SA_and_HP.spam.txt,46), (0004.1999-12-10.kaminski.ham.txt,2), (0018.2001-07-13.SA_and_HP.spam.txt,1), (0002.2004-08-01.BG.spam.txt,1), (0021.1999-12-15.kaminski.ham.txt,4), (0002.2001-05-25.SA_and_HP.spam.txt,1), (0008.2003-12-18.GP.spam.txt,1), (0021.2004-08-02.BG.spam.txt,3), (0015.2001-02-12.kitchen.ham.txt,5), (0005.2001-06-23.SA_and_HP.spam.txt,1), (0001.2000-06-06.lokay.ham.txt,1), (0015.2003-12-19.GP.spam.txt,1), (0018.2003-12-18.GP.spam.txt,2), (0007.2003-12-18.GP.spam.txt,3), (0002.2001-02-07.kitchen.ham.txt,1), (0034.2004-08-03.BG.spam.txt,1), (0030.2001-02-15.kitchen.ham.txt,3), (0037.2001-08-05.SA_and_HP.spam.txt,1), (0026.2001-07-13.SA_and_HP.spam.txt,1), (0003.2003-12-18.GP.spam.txt,1), (0020.2001-02-13.kitchen.ham.txt,4), (0013.1999-12-14.kaminski.ham.txt,2), (0008.2001-02-09.kitchen.ham.txt,1), (0015.1999-12-14.kaminski.ham.txt,2), (0023.2001-08-01.SA_and_HP.spam.txt,1), (0031.2004-08-05.BG.spam.txt,1), (0005.1999-12-14.farmer.ham.txt,1), (0031.2004-08-03.BG.spam.txt,1), (0001.2000-01-17.beck.ham.txt,8), (0025.1999-12-15.kaminski.ham.txt,1), (0005.2001-02-08.kitchen.ham.txt,1), (0002.1999-12-13.farmer.ham.txt,1), (0012.1999-12-14.farmer.ham.txt,1), (0028.1999-12-16.kaminski.ham.txt,3), (0032.2001-08-01.SA_and_HP.spam.txt,3), (0021.2001-02-13.kitchen.ham.txt,8), (0024.2001-08-01.SA_and_HP.spam.txt,3), (0010.1999-12-14.kaminski.ham.txt,1), (0035.2001-08-05.SA_and_HP.spam.txt,1), (0010.2004-08-01.BG.spam.txt,4), (0038.2001-08-05.SA_and_HP.spam.txt,1), (0010.2001-06-28.SA_and_HP.spam.txt,1), (0032.2003-12-22.GP.spam.txt,3), (0016.2004-08-01.BG.spam.txt,2), (0004.2001-04-02.williams.ham.txt,1), (0009.2001-02-09.kitchen.ham.txt,1), (0023.2004-08-02.BG.spam.txt,1), (0022.2004-08-02.BG.spam.txt,1), (0008.2004-08-01.BG.spam.txt,1), (0029.1999-12-17.farmer.ham.txt,1), (0011.2001-06-28.SA_and_HP.spam.txt,1), (0018.2004-08-03.BG.spam.txt,2), (0006.2001-02-08.kitchen.ham.txt,16), (0013.2001-04-03.williams.ham.txt,1), (0023.1999-12-15.kaminski.ham.txt,4), (0014.2001-07-04.SA_and_HP.spam.txt,1), (0030.2004-08-03.BG.spam.txt,1), (0029.2004-08-02.BG.spam.txt,2), (0026.2003-12-21.GP.spam.txt,1), (0004.2004-08-01.BG.spam.txt,1), (0030.2000-01-18.beck.ham.txt,10), (0017.2003-12-18.GP.spam.txt,1), (0009.1999-12-13.kaminski.ham.txt,3), (0025.2001-08-01.SA_and_HP.spam.txt,3), (0032.2000-06-13.lokay.ham.txt,1), (0011.2001-06-29.SA_and_HP.spam.txt,13), (0014.1999-12-14.kaminski.ham.txt,2), (0016.1999-12-15.farmer.ham.txt,1), (0024.2003-12-21.GP.spam.txt,1), (0018.1999-12-14.kaminski.ham.txt,1), (0008.2001-06-25.SA_and_HP.spam.txt,3), (0006.2001-04-03.williams.ham.txt,1), (0029.2001-08-03.SA_and_HP.spam.txt,11), (0024.1999-12-15.kaminski.ham.txt,1), (0007.2001-02-09.kitchen.ham.txt,3), (0030.2001-08-01.SA_and_HP.spam.txt,1), (0016.2001-07-06.SA_and_HP.spam.txt,13), (0006.2003-12-18.GP.spam.txt,2), (0023.2003-12-20.GP.spam.txt,3), (0015.2001-07-05.SA_and_HP.spam.txt,1), (0011.1999-12-14.farmer.ham.txt,2), (0022.2001-08-01.SA_and_HP.spam.txt,2), (0009.2000-06-07.lokay.ham.txt,3))\n(emai,(0014.2001-07-04.SA_and_HP.spam.txt,1))\n(cart,(0016.2001-07-06.SA_and_HP.spam.txt,2), (0019.2001-07-06.SA_and_HP.spam.txt,2))\n(shut,(0007.1999-12-14.farmer.ham.txt,1))\n(partnership,(0022.1999-12-15.kaminski.ham.txt,1), (0021.2001-02-13.kitchen.ham.txt,2), (0018.2003-12-18.GP.spam.txt,1))\n(grant,(0004.1999-12-10.kaminski.ham.txt,1), (0012.1999-12-14.farmer.ham.txt,1), (0009.1999-12-13.kaminski.ham.txt,4), (0021.1999-12-15.farmer.ham.txt,1))\n(stern,(0008.2004-08-01.BG.spam.txt,1))\n(mild,(0007.2003-12-18.GP.spam.txt,2))\n(reportedly,(0015.2001-02-12.kitchen.ham.txt,1), (0006.2001-02-08.kitchen.ham.txt,1))\n(neuweiler,(0020.1999-12-15.farmer.ham.txt,1), (0004.1999-12-14.farmer.ham.txt,1), (0012.1999-12-14.farmer.ham.txt,1))\n(boor,(0034.2003-12-22.GP.spam.txt,1))\n(hp,(0014.1999-12-14.kaminski.ham.txt,1))\n(mifovuh,(0019.2003-12-20.GP.spam.txt,1))\n(randall,(0008.2001-02-09.kitchen.ham.txt,2), (0030.1999-12-20.farmer.ham.txt,2))\n(000,(0038.2001-08-05.SA_and_HP.spam.txt,2), (0017.2004-08-02.BG.spam.txt,4), (0002.1999-12-13.farmer.ham.txt,18), (0022.1999-12-16.farmer.ham.txt,1), (0013.2001-06-30.SA_and_HP.spam.txt,6), (0026.2003-12-21.GP.spam.txt,1), (0019.2001-07-06.SA_and_HP.spam.txt,2), (0009.2001-06-26.SA_and_HP.spam.txt,4), (0006.2001-02-08.kitchen.ham.txt,3), (0022.2004-08-02.BG.spam.txt,6), (0007.2001-02-09.kitchen.ham.txt,1), (0028.1999-12-16.kaminski.ham.txt,1), (0023.2004-08-02.BG.spam.txt,4), (0018.2003-12-18.GP.spam.txt,1), (0023.1999-12-16.farmer.ham.txt,1), (0005.2003-12-18.GP.spam.txt,3), (0014.1999-12-15.farmer.ham.txt,1), (0026.2003-12-18.GP.spam.txt,1), (0016.2001-07-06.SA_and_HP.spam.txt,2), (0011.2001-06-29.SA_and_HP.spam.txt,2), (0008.2001-06-25.SA_and_HP.spam.txt,3), (0001.2000-06-06.lokay.ham.txt,1), (0013.2004-08-01.BG.spam.txt,2), (0029.2001-08-03.SA_and_HP.spam.txt,6), (0037.2001-08-05.SA_and_HP.spam.txt,2), (0021.2004-08-02.BG.spam.txt,5), (0015.1999-12-15.farmer.ham.txt,1))\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575342581754_1280982501",
      "id": "20191202-210941_1178551096",
      "dateCreated": "2019-12-02 21:09:41.755",
      "dateStarted": "2019-12-03 08:51:41.839",
      "dateFinished": "2019-12-03 08:51:42.079",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575342779442_409840726",
      "id": "20191202-211259_1221151670",
      "dateCreated": "2019-12-02 21:12:59.442",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "exercises/ex4/InvertedIndex",
  "id": "2EV4PZS6H",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}